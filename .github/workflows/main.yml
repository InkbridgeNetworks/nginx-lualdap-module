name: "CI"
on: [push]
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true
jobs:
  ci:
    timeout-minutes: 60
    runs-on: self-hosted
    container:
      image: docker.internal.networkradius.com/self-hosted
      #  "privileged" is needed for Samba install
      #  "memory-swap -1" enables full use of host swap and may help
      #    with containers randomly quitting with "The operation was
      #    canceled"
      options: >-
        --privileged
        --memory-swap -1
    strategy:
      fail-fast: false
    env:
      nginx_config_args: |
        --prefix=/usr/local/openresty \
        --conf-path=/etc/nginx/nginx.conf \
        --error-log-path=/var/log/nginx/error.log \
        --http-log-path=/var/log/nginx/access.log \
        --user=root \
        --group=root \
        --with-http_ssl_module \
        --with-file-aio \
        --with-debug \
        --with-pcre \
        --with-pcre-jit \
        --with-http_stub_status_module \
        --with-http_auth_request_module \
        --add-dynamic-module=../
      openresty_base_url: https://openresty.org/download
      openresty_version: 1.21.4.3
    steps:
      - name: Install sudo (optional)
        run: apt-get install sudo
 
      - name: Install git-lfs
        run: sudo apt-get install git-lfs

      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
          submodules: recursive
          # Needed for submodule refs which aren't pointing to the head commit
          fetch-depth: 100

      - name: NGINX - Generate cache key hash
        run: echo "CACHE_KEY=$(echo "${{ runner.os }}-${{ env.openresty_version }}-${{ env.nginx_config_args }}" | sha256sum | cut -d ' ' -f1)" >> $GITHUB_ENV

      - name: NGINX - Install basic dependencies
        run: |
          sudo apt-get update
          # Standard build dependencies
          sudo apt-get install -y --no-install-recommends \
            build-essential \
            devscripts \
            equivs \
            quilt \
            clang \
            llvm \
            lldb \
            strace
          # NGINX specific build dependencies
          sudo apt-get install -y --no-install-recommends \
            perl \
            libpcre3-dev \
            libssl-dev \
            libpqxx-dev \
            libpq-dev \
            libldap-dev \
            zlib1g-dev

      #
      #  Build and install openresty with out custom Async
      #  lua LDAP connector.
      #
      - name: NGINX - Restore build directory
        id: nginx-build-restore
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/openresty-${{ env.openresty_version }}
          key: ${{ env.CACHE_KEY }}

      - name: NGINX - Download (if not cached)
        if: steps.nginx-build-restore.outputs.cache-hit != 'true'
        run: |
          wget ${{ env.openresty_base_url }}/openresty-${{ env.openresty_version }}.tar.gz
          tar -xzf openresty-${{ env.openresty_version }}.tar.gz

      - name: NGINX - Configure
        working-directory: openresty-${{ env.openresty_version }}
        run: |
          ./configure ${{ env.nginx_config_args }}

      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v2
        id: cpu-cores

      - name: NGINX - Build
        working-directory: openresty-${{ env.openresty_version }}
        run: make -j ${{ steps.cpu-cores.outputs.count }}

      - name: NGINX - Install
        working-directory: openresty-${{ env.openresty_version }}
        run: sudo make install

      # Cache the last build state.  This should mean that make only rebuilds
      # files where the openresty version changes, the configure args change
      # or the lua ldap submodule commit changes.
      - name: NGINX - Cache build state
        id: nginx-build-store
        if: steps.nginx-build-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: |
            ${{ github.workspace }}/openresty-${{ env.openresty_version  }}
          key: ${{ env.CACHE_KEY }}

      - name: On Failure - Dump OpenLDAP data
        run: ${{ env.ldapsearch }}
        if: ${{ failure() }}

      - name: On Failure - Dump OpenLDAP configuration
        run: ${{ env.ldapsearch_config }}
        if: ${{ failure() }}

      - name: On Failure - Display startup logs
        run: docker logs "${{ job.services.openldap.id }}"
        if: ${{ failure() }}

      - name: "On Failure - Start tmate"
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true
        if: ${{ github.ref == 'refs/heads/ci-debug' && failure() }}

